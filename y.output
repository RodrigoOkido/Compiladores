Terminais sem uso na gramática

   TOKEN_ERROR


Estado 22 conflitos: 1 de deslocamento/redução
Estado 153 conflitos: 1 de deslocamento/redução


Gramática

    0 $accept: program $end

    1 program: decl

    2 decl: dec decl
    3     | %empty

    4 dec: vardec
    5    | fundec

    6 vardec: vartype SYMBOL_IDENTIFIER '=' lit_value_or_initvect ';'
    7       | vartype '#' SYMBOL_IDENTIFIER '=' lit_value_pointer ';'
    8       | vartype SYMBOL_IDENTIFIER '[' exp ']' ':' lit_value_or_initvect ';'
    9       | vartype SYMBOL_IDENTIFIER '[' exp ']' ';'

   10 vartype: KW_CHAR
   11        | KW_INT
   12        | KW_FLOAT

   13 lit_value_pointer: SYMBOL_LIT_INT
   14                  | SYMBOL_LIT_CHAR
   15                  | %empty

   16 lit_value_or_initvect: SYMBOL_LIT_INT lit_value_or_initvect
   17                      | SYMBOL_LIT_REAL lit_value_or_initvect
   18                      | SYMBOL_LIT_CHAR lit_value_or_initvect
   19                      | %empty

   20 fundec: vartype SYMBOL_IDENTIFIER '(' funparaml ')' block

   21 funparaml: paramdecl paramrest
   22          | %empty

   23 paramdecl: vartype SYMBOL_IDENTIFIER

   24 paramrest: ',' paramdecl paramrest
   25          | %empty

   26 block: '{' lcmd '}'

   27 lcmd: cmd ';' lcmd
   28     | cmd

   29 cmd: SYMBOL_IDENTIFIER '=' exp
   30    | SYMBOL_IDENTIFIER '[' exp ']' '=' exp
   31    | '#' SYMBOL_IDENTIFIER '=' exp
   32    | KW_READ return_read
   33    | KW_RETURN exp
   34    | KW_PRINT argprint
   35    | KW_WHILE '(' exp ')' cmd
   36    | KW_IF '(' exp ')' KW_THEN cmd
   37    | KW_IF '(' exp ')' KW_THEN cmd KW_ELSE cmd
   38    | KW_FOR '(' SYMBOL_IDENTIFIER '=' exp KW_TO exp ')' cmd
   39    | block cmd
   40    | %empty

   41 return_read: SYMBOL_LIT_INT
   42            | SYMBOL_LIT_REAL
   43            | SYMBOL_LIT_CHAR
   44            | SYMBOL_IDENTIFIER
   45            | SYMBOL_LIT_STRING

   46 argprint: printelement restprint

   47 restprint: printelement restprint
   48          | %empty

   49 printelement: exp
   50             | SYMBOL_LIT_STRING

   51 exp: SYMBOL_IDENTIFIER
   52    | SYMBOL_LIT_INT
   53    | SYMBOL_LIT_CHAR
   54    | exp '+' exp
   55    | exp '-' exp
   56    | exp '*' exp
   57    | exp '/' exp
   58    | exp '<' exp
   59    | exp '>' exp
   60    | exp '!' exp
   61    | '(' exp ')'
   62    | exp OPERATOR_LE exp
   63    | exp OPERATOR_GE exp
   64    | exp OPERATOR_EQ exp
   65    | exp OPERATOR_NE exp
   66    | exp OPERATOR_AND exp
   67    | exp OPERATOR_OR exp
   68    | '&' SYMBOL_IDENTIFIER
   69    | '#' SYMBOL_IDENTIFIER
   70    | SYMBOL_IDENTIFIER '[' exp ']'
   71    | SYMBOL_IDENTIFIER '(' paraml ')'

   72 paraml: listParam newparam
   73       | %empty

   74 newparam: ',' listParam newparam
   75         | %empty

   76 listParam: SYMBOL_LIT_INT
   77          | SYMBOL_LIT_CHAR
   78          | SYMBOL_LIT_REAL
   79          | SYMBOL_IDENTIFIER
   80          | '#' SYMBOL_IDENTIFIER
   81          | '&' SYMBOL_IDENTIFIER


Terminais, com as regras onde eles aparecem

$end (0) 0
'!' (33) 60
'#' (35) 7 31 69 80
'&' (38) 68 81
'(' (40) 20 35 36 37 38 61 71
')' (41) 20 35 36 37 38 61 71
'*' (42) 56
'+' (43) 54
',' (44) 24 74
'-' (45) 55
'/' (47) 57
':' (58) 8
';' (59) 6 7 8 9 27
'<' (60) 58
'=' (61) 6 7 29 30 31 38
'>' (62) 59
'[' (91) 8 9 30 70
']' (93) 8 9 30 70
'{' (123) 26
'}' (125) 26
KW_CHAR (256) 10
KW_INT (257) 11
KW_FLOAT (259) 12
KW_IF (261) 36 37
KW_THEN (262) 36 37
KW_ELSE (263) 37
KW_WHILE (264) 35
KW_FOR (265) 38
KW_READ (266) 32
KW_RETURN (267) 33
KW_PRINT (268) 34
KW_TO (269) 38
OPERATOR_LE (270) 62
OPERATOR_GE (271) 63
OPERATOR_EQ (272) 64
OPERATOR_NE (273) 65
OPERATOR_AND (274) 66
OPERATOR_OR (275) 67
SYMBOL_IDENTIFIER (280) 6 7 8 9 20 23 29 30 31 38 44 51 68 69 70 71
    79 80 81
SYMBOL_LIT_INT (281) 13 16 41 52 76
SYMBOL_LIT_REAL (282) 17 42 78
SYMBOL_LIT_CHAR (283) 14 18 43 53 77
SYMBOL_LIT_STRING (284) 45 50
TOKEN_ERROR (290)
error (291)


Não terminais com as regras onde eles aparecem

$accept (46)
    à esquerda: 0
program (47)
    à esquerda: 1, à direita: 0
decl (48)
    à esquerda: 2 3, à direita: 1 2
dec (49)
    à esquerda: 4 5, à direita: 2
vardec (50)
    à esquerda: 6 7 8 9, à direita: 4
vartype (51)
    à esquerda: 10 11 12, à direita: 6 7 8 9 20 23
lit_value_pointer (52)
    à esquerda: 13 14 15, à direita: 7
lit_value_or_initvect (53)
    à esquerda: 16 17 18 19, à direita: 6 8 16 17 18
fundec (54)
    à esquerda: 20, à direita: 5
funparaml (55)
    à esquerda: 21 22, à direita: 20
paramdecl (56)
    à esquerda: 23, à direita: 21 24
paramrest (57)
    à esquerda: 24 25, à direita: 21 24
block (58)
    à esquerda: 26, à direita: 20 39
lcmd (59)
    à esquerda: 27 28, à direita: 26 27
cmd (60)
    à esquerda: 29 30 31 32 33 34 35 36 37 38 39 40, à direita: 27
    28 35 36 37 38 39
return_read (61)
    à esquerda: 41 42 43 44 45, à direita: 32
argprint (62)
    à esquerda: 46, à direita: 34
restprint (63)
    à esquerda: 47 48, à direita: 46 47
printelement (64)
    à esquerda: 49 50, à direita: 46 47
exp (65)
    à esquerda: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
    68 69 70 71, à direita: 8 9 29 30 31 33 35 36 37 38 49 54 55 56
    57 58 59 60 61 62 63 64 65 66 67 70
paraml (66)
    à esquerda: 72 73, à direita: 71
newparam (67)
    à esquerda: 74 75, à direita: 72 74
listParam (68)
    à esquerda: 76 77 78 79 80 81, à direita: 72 74


Estado 0

    0 $accept: . program $end

    KW_CHAR   deslocar, e ir ao estado 1
    KW_INT    deslocar, e ir ao estado 2
    KW_FLOAT  deslocar, e ir ao estado 3

    $padrão  reduzir usando a regra 3 (decl)

    program  ir ao estado 4
    decl     ir ao estado 5
    dec      ir ao estado 6
    vardec   ir ao estado 7
    vartype  ir ao estado 8
    fundec   ir ao estado 9


Estado 1

   10 vartype: KW_CHAR .

    $padrão  reduzir usando a regra 10 (vartype)


Estado 2

   11 vartype: KW_INT .

    $padrão  reduzir usando a regra 11 (vartype)


Estado 3

   12 vartype: KW_FLOAT .

    $padrão  reduzir usando a regra 12 (vartype)


Estado 4

    0 $accept: program . $end

    $end  deslocar, e ir ao estado 10


Estado 5

    1 program: decl .

    $padrão  reduzir usando a regra 1 (program)


Estado 6

    2 decl: dec . decl

    KW_CHAR   deslocar, e ir ao estado 1
    KW_INT    deslocar, e ir ao estado 2
    KW_FLOAT  deslocar, e ir ao estado 3

    $padrão  reduzir usando a regra 3 (decl)

    decl     ir ao estado 11
    dec      ir ao estado 6
    vardec   ir ao estado 7
    vartype  ir ao estado 8
    fundec   ir ao estado 9


Estado 7

    4 dec: vardec .

    $padrão  reduzir usando a regra 4 (dec)


Estado 8

    6 vardec: vartype . SYMBOL_IDENTIFIER '=' lit_value_or_initvect ';'
    7       | vartype . '#' SYMBOL_IDENTIFIER '=' lit_value_pointer ';'
    8       | vartype . SYMBOL_IDENTIFIER '[' exp ']' ':' lit_value_or_initvect ';'
    9       | vartype . SYMBOL_IDENTIFIER '[' exp ']' ';'
   20 fundec: vartype . SYMBOL_IDENTIFIER '(' funparaml ')' block

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 12
    '#'                deslocar, e ir ao estado 13


Estado 9

    5 dec: fundec .

    $padrão  reduzir usando a regra 5 (dec)


Estado 10

    0 $accept: program $end .

    $padrão  aceitar


Estado 11

    2 decl: dec decl .

    $padrão  reduzir usando a regra 2 (decl)


Estado 12

    6 vardec: vartype SYMBOL_IDENTIFIER . '=' lit_value_or_initvect ';'
    8       | vartype SYMBOL_IDENTIFIER . '[' exp ']' ':' lit_value_or_initvect ';'
    9       | vartype SYMBOL_IDENTIFIER . '[' exp ']' ';'
   20 fundec: vartype SYMBOL_IDENTIFIER . '(' funparaml ')' block

    '='  deslocar, e ir ao estado 14
    '['  deslocar, e ir ao estado 15
    '('  deslocar, e ir ao estado 16


Estado 13

    7 vardec: vartype '#' . SYMBOL_IDENTIFIER '=' lit_value_pointer ';'

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 17


Estado 14

    6 vardec: vartype SYMBOL_IDENTIFIER '=' . lit_value_or_initvect ';'

    SYMBOL_LIT_INT   deslocar, e ir ao estado 18
    SYMBOL_LIT_REAL  deslocar, e ir ao estado 19
    SYMBOL_LIT_CHAR  deslocar, e ir ao estado 20

    $padrão  reduzir usando a regra 19 (lit_value_or_initvect)

    lit_value_or_initvect  ir ao estado 21


Estado 15

    8 vardec: vartype SYMBOL_IDENTIFIER '[' . exp ']' ':' lit_value_or_initvect ';'
    9       | vartype SYMBOL_IDENTIFIER '[' . exp ']' ';'

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 28


Estado 16

   20 fundec: vartype SYMBOL_IDENTIFIER '(' . funparaml ')' block

    KW_CHAR   deslocar, e ir ao estado 1
    KW_INT    deslocar, e ir ao estado 2
    KW_FLOAT  deslocar, e ir ao estado 3

    $padrão  reduzir usando a regra 22 (funparaml)

    vartype    ir ao estado 29
    funparaml  ir ao estado 30
    paramdecl  ir ao estado 31


Estado 17

    7 vardec: vartype '#' SYMBOL_IDENTIFIER . '=' lit_value_pointer ';'

    '='  deslocar, e ir ao estado 32


Estado 18

   16 lit_value_or_initvect: SYMBOL_LIT_INT . lit_value_or_initvect

    SYMBOL_LIT_INT   deslocar, e ir ao estado 18
    SYMBOL_LIT_REAL  deslocar, e ir ao estado 19
    SYMBOL_LIT_CHAR  deslocar, e ir ao estado 20

    $padrão  reduzir usando a regra 19 (lit_value_or_initvect)

    lit_value_or_initvect  ir ao estado 33


Estado 19

   17 lit_value_or_initvect: SYMBOL_LIT_REAL . lit_value_or_initvect

    SYMBOL_LIT_INT   deslocar, e ir ao estado 18
    SYMBOL_LIT_REAL  deslocar, e ir ao estado 19
    SYMBOL_LIT_CHAR  deslocar, e ir ao estado 20

    $padrão  reduzir usando a regra 19 (lit_value_or_initvect)

    lit_value_or_initvect  ir ao estado 34


Estado 20

   18 lit_value_or_initvect: SYMBOL_LIT_CHAR . lit_value_or_initvect

    SYMBOL_LIT_INT   deslocar, e ir ao estado 18
    SYMBOL_LIT_REAL  deslocar, e ir ao estado 19
    SYMBOL_LIT_CHAR  deslocar, e ir ao estado 20

    $padrão  reduzir usando a regra 19 (lit_value_or_initvect)

    lit_value_or_initvect  ir ao estado 35


Estado 21

    6 vardec: vartype SYMBOL_IDENTIFIER '=' lit_value_or_initvect . ';'

    ';'  deslocar, e ir ao estado 36


Estado 22

   51 exp: SYMBOL_IDENTIFIER .
   70    | SYMBOL_IDENTIFIER . '[' exp ']'
   71    | SYMBOL_IDENTIFIER . '(' paraml ')'

    '['  deslocar, e ir ao estado 37
    '('  deslocar, e ir ao estado 38

    '('       [reduzir usando a regra 51 (exp)]
    $padrão  reduzir usando a regra 51 (exp)


Estado 23

   52 exp: SYMBOL_LIT_INT .

    $padrão  reduzir usando a regra 52 (exp)


Estado 24

   53 exp: SYMBOL_LIT_CHAR .

    $padrão  reduzir usando a regra 53 (exp)


Estado 25

   69 exp: '#' . SYMBOL_IDENTIFIER

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 39


Estado 26

   61 exp: '(' . exp ')'

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 40


Estado 27

   68 exp: '&' . SYMBOL_IDENTIFIER

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 41


Estado 28

    8 vardec: vartype SYMBOL_IDENTIFIER '[' exp . ']' ':' lit_value_or_initvect ';'
    9       | vartype SYMBOL_IDENTIFIER '[' exp . ']' ';'
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   deslocar, e ir ao estado 42
    OPERATOR_GE   deslocar, e ir ao estado 43
    OPERATOR_EQ   deslocar, e ir ao estado 44
    OPERATOR_NE   deslocar, e ir ao estado 45
    OPERATOR_AND  deslocar, e ir ao estado 46
    OPERATOR_OR   deslocar, e ir ao estado 47
    '!'           deslocar, e ir ao estado 48
    '<'           deslocar, e ir ao estado 49
    '>'           deslocar, e ir ao estado 50
    '+'           deslocar, e ir ao estado 51
    '-'           deslocar, e ir ao estado 52
    '*'           deslocar, e ir ao estado 53
    '/'           deslocar, e ir ao estado 54
    ']'           deslocar, e ir ao estado 55


Estado 29

   23 paramdecl: vartype . SYMBOL_IDENTIFIER

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 56


Estado 30

   20 fundec: vartype SYMBOL_IDENTIFIER '(' funparaml . ')' block

    ')'  deslocar, e ir ao estado 57


Estado 31

   21 funparaml: paramdecl . paramrest

    ','  deslocar, e ir ao estado 58

    $padrão  reduzir usando a regra 25 (paramrest)

    paramrest  ir ao estado 59


Estado 32

    7 vardec: vartype '#' SYMBOL_IDENTIFIER '=' . lit_value_pointer ';'

    SYMBOL_LIT_INT   deslocar, e ir ao estado 60
    SYMBOL_LIT_CHAR  deslocar, e ir ao estado 61

    $padrão  reduzir usando a regra 15 (lit_value_pointer)

    lit_value_pointer  ir ao estado 62


Estado 33

   16 lit_value_or_initvect: SYMBOL_LIT_INT lit_value_or_initvect .

    $padrão  reduzir usando a regra 16 (lit_value_or_initvect)


Estado 34

   17 lit_value_or_initvect: SYMBOL_LIT_REAL lit_value_or_initvect .

    $padrão  reduzir usando a regra 17 (lit_value_or_initvect)


Estado 35

   18 lit_value_or_initvect: SYMBOL_LIT_CHAR lit_value_or_initvect .

    $padrão  reduzir usando a regra 18 (lit_value_or_initvect)


Estado 36

    6 vardec: vartype SYMBOL_IDENTIFIER '=' lit_value_or_initvect ';' .

    $padrão  reduzir usando a regra 6 (vardec)


Estado 37

   70 exp: SYMBOL_IDENTIFIER '[' . exp ']'

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 63


Estado 38

   71 exp: SYMBOL_IDENTIFIER '(' . paraml ')'

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 64
    SYMBOL_LIT_INT     deslocar, e ir ao estado 65
    SYMBOL_LIT_REAL    deslocar, e ir ao estado 66
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 67
    '#'                deslocar, e ir ao estado 68
    '&'                deslocar, e ir ao estado 69

    $padrão  reduzir usando a regra 73 (paraml)

    paraml     ir ao estado 70
    listParam  ir ao estado 71


Estado 39

   69 exp: '#' SYMBOL_IDENTIFIER .

    $padrão  reduzir usando a regra 69 (exp)


Estado 40

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   61    | '(' exp . ')'
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   deslocar, e ir ao estado 42
    OPERATOR_GE   deslocar, e ir ao estado 43
    OPERATOR_EQ   deslocar, e ir ao estado 44
    OPERATOR_NE   deslocar, e ir ao estado 45
    OPERATOR_AND  deslocar, e ir ao estado 46
    OPERATOR_OR   deslocar, e ir ao estado 47
    '!'           deslocar, e ir ao estado 48
    '<'           deslocar, e ir ao estado 49
    '>'           deslocar, e ir ao estado 50
    '+'           deslocar, e ir ao estado 51
    '-'           deslocar, e ir ao estado 52
    '*'           deslocar, e ir ao estado 53
    '/'           deslocar, e ir ao estado 54
    ')'           deslocar, e ir ao estado 72


Estado 41

   68 exp: '&' SYMBOL_IDENTIFIER .

    $padrão  reduzir usando a regra 68 (exp)


Estado 42

   62 exp: exp OPERATOR_LE . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 73


Estado 43

   63 exp: exp OPERATOR_GE . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 74


Estado 44

   64 exp: exp OPERATOR_EQ . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 75


Estado 45

   65 exp: exp OPERATOR_NE . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 76


Estado 46

   66 exp: exp OPERATOR_AND . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 77


Estado 47

   67 exp: exp OPERATOR_OR . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 78


Estado 48

   60 exp: exp '!' . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 79


Estado 49

   58 exp: exp '<' . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 80


Estado 50

   59 exp: exp '>' . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 81


Estado 51

   54 exp: exp '+' . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 82


Estado 52

   55 exp: exp '-' . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 83


Estado 53

   56 exp: exp '*' . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 84


Estado 54

   57 exp: exp '/' . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 85


Estado 55

    8 vardec: vartype SYMBOL_IDENTIFIER '[' exp ']' . ':' lit_value_or_initvect ';'
    9       | vartype SYMBOL_IDENTIFIER '[' exp ']' . ';'

    ';'  deslocar, e ir ao estado 86
    ':'  deslocar, e ir ao estado 87


Estado 56

   23 paramdecl: vartype SYMBOL_IDENTIFIER .

    $padrão  reduzir usando a regra 23 (paramdecl)


Estado 57

   20 fundec: vartype SYMBOL_IDENTIFIER '(' funparaml ')' . block

    '{'  deslocar, e ir ao estado 88

    block  ir ao estado 89


Estado 58

   24 paramrest: ',' . paramdecl paramrest

    KW_CHAR   deslocar, e ir ao estado 1
    KW_INT    deslocar, e ir ao estado 2
    KW_FLOAT  deslocar, e ir ao estado 3

    vartype    ir ao estado 29
    paramdecl  ir ao estado 90


Estado 59

   21 funparaml: paramdecl paramrest .

    $padrão  reduzir usando a regra 21 (funparaml)


Estado 60

   13 lit_value_pointer: SYMBOL_LIT_INT .

    $padrão  reduzir usando a regra 13 (lit_value_pointer)


Estado 61

   14 lit_value_pointer: SYMBOL_LIT_CHAR .

    $padrão  reduzir usando a regra 14 (lit_value_pointer)


Estado 62

    7 vardec: vartype '#' SYMBOL_IDENTIFIER '=' lit_value_pointer . ';'

    ';'  deslocar, e ir ao estado 91


Estado 63

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp
   70    | SYMBOL_IDENTIFIER '[' exp . ']'

    OPERATOR_LE   deslocar, e ir ao estado 42
    OPERATOR_GE   deslocar, e ir ao estado 43
    OPERATOR_EQ   deslocar, e ir ao estado 44
    OPERATOR_NE   deslocar, e ir ao estado 45
    OPERATOR_AND  deslocar, e ir ao estado 46
    OPERATOR_OR   deslocar, e ir ao estado 47
    '!'           deslocar, e ir ao estado 48
    '<'           deslocar, e ir ao estado 49
    '>'           deslocar, e ir ao estado 50
    '+'           deslocar, e ir ao estado 51
    '-'           deslocar, e ir ao estado 52
    '*'           deslocar, e ir ao estado 53
    '/'           deslocar, e ir ao estado 54
    ']'           deslocar, e ir ao estado 92


Estado 64

   79 listParam: SYMBOL_IDENTIFIER .

    $padrão  reduzir usando a regra 79 (listParam)


Estado 65

   76 listParam: SYMBOL_LIT_INT .

    $padrão  reduzir usando a regra 76 (listParam)


Estado 66

   78 listParam: SYMBOL_LIT_REAL .

    $padrão  reduzir usando a regra 78 (listParam)


Estado 67

   77 listParam: SYMBOL_LIT_CHAR .

    $padrão  reduzir usando a regra 77 (listParam)


Estado 68

   80 listParam: '#' . SYMBOL_IDENTIFIER

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 93


Estado 69

   81 listParam: '&' . SYMBOL_IDENTIFIER

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 94


Estado 70

   71 exp: SYMBOL_IDENTIFIER '(' paraml . ')'

    ')'  deslocar, e ir ao estado 95


Estado 71

   72 paraml: listParam . newparam

    ','  deslocar, e ir ao estado 96

    $padrão  reduzir usando a regra 75 (newparam)

    newparam  ir ao estado 97


Estado 72

   61 exp: '(' exp ')' .

    $padrão  reduzir usando a regra 61 (exp)


Estado 73

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   62    | exp OPERATOR_LE exp .
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    '+'  deslocar, e ir ao estado 51
    '-'  deslocar, e ir ao estado 52
    '*'  deslocar, e ir ao estado 53
    '/'  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 62 (exp)

    Conflito entre regra 62 e token OPERATOR_LE resolvido como reduce. (%left OPERATOR_LE).
    Conflito entre regra 62 e token OPERATOR_GE resolvido como reduce. (%left OPERATOR_GE).
    Conflito entre regra 62 e token OPERATOR_EQ resolvido como reduce. (%left OPERATOR_EQ).
    Conflito entre regra 62 e token OPERATOR_NE resolvido como reduce. (%left OPERATOR_NE).
    Conflito entre regra 62 e token OPERATOR_AND resolvido como reduce. (OPERATOR_AND < OPERATOR_LE).
    Conflito entre regra 62 e token OPERATOR_OR resolvido como reduce. (OPERATOR_OR < OPERATOR_LE).
    Conflito entre regra 62 e token '!' resolvido como reduce. ('!' < OPERATOR_LE).
    Conflito entre regra 62 e token '<' resolvido como reduce. (%left '<').
    Conflito entre regra 62 e token '>' resolvido como reduce. (%left '>').
    Conflito entre regra 62 e token '+' resolvido como shift. (OPERATOR_LE < '+').
    Conflito entre regra 62 e token '-' resolvido como shift. (OPERATOR_LE < '-').
    Conflito entre regra 62 e token '*' resolvido como shift. (OPERATOR_LE < '*').
    Conflito entre regra 62 e token '/' resolvido como shift. (OPERATOR_LE < '/').


Estado 74

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   63    | exp OPERATOR_GE exp .
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    '+'  deslocar, e ir ao estado 51
    '-'  deslocar, e ir ao estado 52
    '*'  deslocar, e ir ao estado 53
    '/'  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 63 (exp)

    Conflito entre regra 63 e token OPERATOR_LE resolvido como reduce. (%left OPERATOR_LE).
    Conflito entre regra 63 e token OPERATOR_GE resolvido como reduce. (%left OPERATOR_GE).
    Conflito entre regra 63 e token OPERATOR_EQ resolvido como reduce. (%left OPERATOR_EQ).
    Conflito entre regra 63 e token OPERATOR_NE resolvido como reduce. (%left OPERATOR_NE).
    Conflito entre regra 63 e token OPERATOR_AND resolvido como reduce. (OPERATOR_AND < OPERATOR_GE).
    Conflito entre regra 63 e token OPERATOR_OR resolvido como reduce. (OPERATOR_OR < OPERATOR_GE).
    Conflito entre regra 63 e token '!' resolvido como reduce. ('!' < OPERATOR_GE).
    Conflito entre regra 63 e token '<' resolvido como reduce. (%left '<').
    Conflito entre regra 63 e token '>' resolvido como reduce. (%left '>').
    Conflito entre regra 63 e token '+' resolvido como shift. (OPERATOR_GE < '+').
    Conflito entre regra 63 e token '-' resolvido como shift. (OPERATOR_GE < '-').
    Conflito entre regra 63 e token '*' resolvido como shift. (OPERATOR_GE < '*').
    Conflito entre regra 63 e token '/' resolvido como shift. (OPERATOR_GE < '/').


Estado 75

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   64    | exp OPERATOR_EQ exp .
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    '+'  deslocar, e ir ao estado 51
    '-'  deslocar, e ir ao estado 52
    '*'  deslocar, e ir ao estado 53
    '/'  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 64 (exp)

    Conflito entre regra 64 e token OPERATOR_LE resolvido como reduce. (%left OPERATOR_LE).
    Conflito entre regra 64 e token OPERATOR_GE resolvido como reduce. (%left OPERATOR_GE).
    Conflito entre regra 64 e token OPERATOR_EQ resolvido como reduce. (%left OPERATOR_EQ).
    Conflito entre regra 64 e token OPERATOR_NE resolvido como reduce. (%left OPERATOR_NE).
    Conflito entre regra 64 e token OPERATOR_AND resolvido como reduce. (OPERATOR_AND < OPERATOR_EQ).
    Conflito entre regra 64 e token OPERATOR_OR resolvido como reduce. (OPERATOR_OR < OPERATOR_EQ).
    Conflito entre regra 64 e token '!' resolvido como reduce. ('!' < OPERATOR_EQ).
    Conflito entre regra 64 e token '<' resolvido como reduce. (%left '<').
    Conflito entre regra 64 e token '>' resolvido como reduce. (%left '>').
    Conflito entre regra 64 e token '+' resolvido como shift. (OPERATOR_EQ < '+').
    Conflito entre regra 64 e token '-' resolvido como shift. (OPERATOR_EQ < '-').
    Conflito entre regra 64 e token '*' resolvido como shift. (OPERATOR_EQ < '*').
    Conflito entre regra 64 e token '/' resolvido como shift. (OPERATOR_EQ < '/').


Estado 76

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   65    | exp OPERATOR_NE exp .
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    '+'  deslocar, e ir ao estado 51
    '-'  deslocar, e ir ao estado 52
    '*'  deslocar, e ir ao estado 53
    '/'  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 65 (exp)

    Conflito entre regra 65 e token OPERATOR_LE resolvido como reduce. (%left OPERATOR_LE).
    Conflito entre regra 65 e token OPERATOR_GE resolvido como reduce. (%left OPERATOR_GE).
    Conflito entre regra 65 e token OPERATOR_EQ resolvido como reduce. (%left OPERATOR_EQ).
    Conflito entre regra 65 e token OPERATOR_NE resolvido como reduce. (%left OPERATOR_NE).
    Conflito entre regra 65 e token OPERATOR_AND resolvido como reduce. (OPERATOR_AND < OPERATOR_NE).
    Conflito entre regra 65 e token OPERATOR_OR resolvido como reduce. (OPERATOR_OR < OPERATOR_NE).
    Conflito entre regra 65 e token '!' resolvido como reduce. ('!' < OPERATOR_NE).
    Conflito entre regra 65 e token '<' resolvido como reduce. (%left '<').
    Conflito entre regra 65 e token '>' resolvido como reduce. (%left '>').
    Conflito entre regra 65 e token '+' resolvido como shift. (OPERATOR_NE < '+').
    Conflito entre regra 65 e token '-' resolvido como shift. (OPERATOR_NE < '-').
    Conflito entre regra 65 e token '*' resolvido como shift. (OPERATOR_NE < '*').
    Conflito entre regra 65 e token '/' resolvido como shift. (OPERATOR_NE < '/').


Estado 77

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   66    | exp OPERATOR_AND exp .
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE  deslocar, e ir ao estado 42
    OPERATOR_GE  deslocar, e ir ao estado 43
    OPERATOR_EQ  deslocar, e ir ao estado 44
    OPERATOR_NE  deslocar, e ir ao estado 45
    '<'          deslocar, e ir ao estado 49
    '>'          deslocar, e ir ao estado 50
    '+'          deslocar, e ir ao estado 51
    '-'          deslocar, e ir ao estado 52
    '*'          deslocar, e ir ao estado 53
    '/'          deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 66 (exp)

    Conflito entre regra 66 e token OPERATOR_LE resolvido como shift. (OPERATOR_AND < OPERATOR_LE).
    Conflito entre regra 66 e token OPERATOR_GE resolvido como shift. (OPERATOR_AND < OPERATOR_GE).
    Conflito entre regra 66 e token OPERATOR_EQ resolvido como shift. (OPERATOR_AND < OPERATOR_EQ).
    Conflito entre regra 66 e token OPERATOR_NE resolvido como shift. (OPERATOR_AND < OPERATOR_NE).
    Conflito entre regra 66 e token OPERATOR_AND resolvido como reduce. (%left OPERATOR_AND).
    Conflito entre regra 66 e token OPERATOR_OR resolvido como reduce. (%left OPERATOR_OR).
    Conflito entre regra 66 e token '!' resolvido como reduce. (%left '!').
    Conflito entre regra 66 e token '<' resolvido como shift. (OPERATOR_AND < '<').
    Conflito entre regra 66 e token '>' resolvido como shift. (OPERATOR_AND < '>').
    Conflito entre regra 66 e token '+' resolvido como shift. (OPERATOR_AND < '+').
    Conflito entre regra 66 e token '-' resolvido como shift. (OPERATOR_AND < '-').
    Conflito entre regra 66 e token '*' resolvido como shift. (OPERATOR_AND < '*').
    Conflito entre regra 66 e token '/' resolvido como shift. (OPERATOR_AND < '/').


Estado 78

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp
   67    | exp OPERATOR_OR exp .

    OPERATOR_LE  deslocar, e ir ao estado 42
    OPERATOR_GE  deslocar, e ir ao estado 43
    OPERATOR_EQ  deslocar, e ir ao estado 44
    OPERATOR_NE  deslocar, e ir ao estado 45
    '<'          deslocar, e ir ao estado 49
    '>'          deslocar, e ir ao estado 50
    '+'          deslocar, e ir ao estado 51
    '-'          deslocar, e ir ao estado 52
    '*'          deslocar, e ir ao estado 53
    '/'          deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 67 (exp)

    Conflito entre regra 67 e token OPERATOR_LE resolvido como shift. (OPERATOR_OR < OPERATOR_LE).
    Conflito entre regra 67 e token OPERATOR_GE resolvido como shift. (OPERATOR_OR < OPERATOR_GE).
    Conflito entre regra 67 e token OPERATOR_EQ resolvido como shift. (OPERATOR_OR < OPERATOR_EQ).
    Conflito entre regra 67 e token OPERATOR_NE resolvido como shift. (OPERATOR_OR < OPERATOR_NE).
    Conflito entre regra 67 e token OPERATOR_AND resolvido como reduce. (%left OPERATOR_AND).
    Conflito entre regra 67 e token OPERATOR_OR resolvido como reduce. (%left OPERATOR_OR).
    Conflito entre regra 67 e token '!' resolvido como reduce. (%left '!').
    Conflito entre regra 67 e token '<' resolvido como shift. (OPERATOR_OR < '<').
    Conflito entre regra 67 e token '>' resolvido como shift. (OPERATOR_OR < '>').
    Conflito entre regra 67 e token '+' resolvido como shift. (OPERATOR_OR < '+').
    Conflito entre regra 67 e token '-' resolvido como shift. (OPERATOR_OR < '-').
    Conflito entre regra 67 e token '*' resolvido como shift. (OPERATOR_OR < '*').
    Conflito entre regra 67 e token '/' resolvido como shift. (OPERATOR_OR < '/').


Estado 79

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   60    | exp '!' exp .
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE  deslocar, e ir ao estado 42
    OPERATOR_GE  deslocar, e ir ao estado 43
    OPERATOR_EQ  deslocar, e ir ao estado 44
    OPERATOR_NE  deslocar, e ir ao estado 45
    '<'          deslocar, e ir ao estado 49
    '>'          deslocar, e ir ao estado 50
    '+'          deslocar, e ir ao estado 51
    '-'          deslocar, e ir ao estado 52
    '*'          deslocar, e ir ao estado 53
    '/'          deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 60 (exp)

    Conflito entre regra 60 e token OPERATOR_LE resolvido como shift. ('!' < OPERATOR_LE).
    Conflito entre regra 60 e token OPERATOR_GE resolvido como shift. ('!' < OPERATOR_GE).
    Conflito entre regra 60 e token OPERATOR_EQ resolvido como shift. ('!' < OPERATOR_EQ).
    Conflito entre regra 60 e token OPERATOR_NE resolvido como shift. ('!' < OPERATOR_NE).
    Conflito entre regra 60 e token OPERATOR_AND resolvido como reduce. (%left OPERATOR_AND).
    Conflito entre regra 60 e token OPERATOR_OR resolvido como reduce. (%left OPERATOR_OR).
    Conflito entre regra 60 e token '!' resolvido como reduce. (%left '!').
    Conflito entre regra 60 e token '<' resolvido como shift. ('!' < '<').
    Conflito entre regra 60 e token '>' resolvido como shift. ('!' < '>').
    Conflito entre regra 60 e token '+' resolvido como shift. ('!' < '+').
    Conflito entre regra 60 e token '-' resolvido como shift. ('!' < '-').
    Conflito entre regra 60 e token '*' resolvido como shift. ('!' < '*').
    Conflito entre regra 60 e token '/' resolvido como shift. ('!' < '/').


Estado 80

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   58    | exp '<' exp .
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    '+'  deslocar, e ir ao estado 51
    '-'  deslocar, e ir ao estado 52
    '*'  deslocar, e ir ao estado 53
    '/'  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 58 (exp)

    Conflito entre regra 58 e token OPERATOR_LE resolvido como reduce. (%left OPERATOR_LE).
    Conflito entre regra 58 e token OPERATOR_GE resolvido como reduce. (%left OPERATOR_GE).
    Conflito entre regra 58 e token OPERATOR_EQ resolvido como reduce. (%left OPERATOR_EQ).
    Conflito entre regra 58 e token OPERATOR_NE resolvido como reduce. (%left OPERATOR_NE).
    Conflito entre regra 58 e token OPERATOR_AND resolvido como reduce. (OPERATOR_AND < '<').
    Conflito entre regra 58 e token OPERATOR_OR resolvido como reduce. (OPERATOR_OR < '<').
    Conflito entre regra 58 e token '!' resolvido como reduce. ('!' < '<').
    Conflito entre regra 58 e token '<' resolvido como reduce. (%left '<').
    Conflito entre regra 58 e token '>' resolvido como reduce. (%left '>').
    Conflito entre regra 58 e token '+' resolvido como shift. ('<' < '+').
    Conflito entre regra 58 e token '-' resolvido como shift. ('<' < '-').
    Conflito entre regra 58 e token '*' resolvido como shift. ('<' < '*').
    Conflito entre regra 58 e token '/' resolvido como shift. ('<' < '/').


Estado 81

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   59    | exp '>' exp .
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    '+'  deslocar, e ir ao estado 51
    '-'  deslocar, e ir ao estado 52
    '*'  deslocar, e ir ao estado 53
    '/'  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 59 (exp)

    Conflito entre regra 59 e token OPERATOR_LE resolvido como reduce. (%left OPERATOR_LE).
    Conflito entre regra 59 e token OPERATOR_GE resolvido como reduce. (%left OPERATOR_GE).
    Conflito entre regra 59 e token OPERATOR_EQ resolvido como reduce. (%left OPERATOR_EQ).
    Conflito entre regra 59 e token OPERATOR_NE resolvido como reduce. (%left OPERATOR_NE).
    Conflito entre regra 59 e token OPERATOR_AND resolvido como reduce. (OPERATOR_AND < '>').
    Conflito entre regra 59 e token OPERATOR_OR resolvido como reduce. (OPERATOR_OR < '>').
    Conflito entre regra 59 e token '!' resolvido como reduce. ('!' < '>').
    Conflito entre regra 59 e token '<' resolvido como reduce. (%left '<').
    Conflito entre regra 59 e token '>' resolvido como reduce. (%left '>').
    Conflito entre regra 59 e token '+' resolvido como shift. ('>' < '+').
    Conflito entre regra 59 e token '-' resolvido como shift. ('>' < '-').
    Conflito entre regra 59 e token '*' resolvido como shift. ('>' < '*').
    Conflito entre regra 59 e token '/' resolvido como shift. ('>' < '/').


Estado 82

   54 exp: exp . '+' exp
   54    | exp '+' exp .
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    '*'  deslocar, e ir ao estado 53
    '/'  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 54 (exp)

    Conflito entre regra 54 e token OPERATOR_LE resolvido como reduce. (OPERATOR_LE < '+').
    Conflito entre regra 54 e token OPERATOR_GE resolvido como reduce. (OPERATOR_GE < '+').
    Conflito entre regra 54 e token OPERATOR_EQ resolvido como reduce. (OPERATOR_EQ < '+').
    Conflito entre regra 54 e token OPERATOR_NE resolvido como reduce. (OPERATOR_NE < '+').
    Conflito entre regra 54 e token OPERATOR_AND resolvido como reduce. (OPERATOR_AND < '+').
    Conflito entre regra 54 e token OPERATOR_OR resolvido como reduce. (OPERATOR_OR < '+').
    Conflito entre regra 54 e token '!' resolvido como reduce. ('!' < '+').
    Conflito entre regra 54 e token '<' resolvido como reduce. ('<' < '+').
    Conflito entre regra 54 e token '>' resolvido como reduce. ('>' < '+').
    Conflito entre regra 54 e token '+' resolvido como reduce. (%left '+').
    Conflito entre regra 54 e token '-' resolvido como reduce. (%left '-').
    Conflito entre regra 54 e token '*' resolvido como shift. ('+' < '*').
    Conflito entre regra 54 e token '/' resolvido como shift. ('+' < '/').


Estado 83

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   55    | exp '-' exp .
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    '*'  deslocar, e ir ao estado 53
    '/'  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 55 (exp)

    Conflito entre regra 55 e token OPERATOR_LE resolvido como reduce. (OPERATOR_LE < '-').
    Conflito entre regra 55 e token OPERATOR_GE resolvido como reduce. (OPERATOR_GE < '-').
    Conflito entre regra 55 e token OPERATOR_EQ resolvido como reduce. (OPERATOR_EQ < '-').
    Conflito entre regra 55 e token OPERATOR_NE resolvido como reduce. (OPERATOR_NE < '-').
    Conflito entre regra 55 e token OPERATOR_AND resolvido como reduce. (OPERATOR_AND < '-').
    Conflito entre regra 55 e token OPERATOR_OR resolvido como reduce. (OPERATOR_OR < '-').
    Conflito entre regra 55 e token '!' resolvido como reduce. ('!' < '-').
    Conflito entre regra 55 e token '<' resolvido como reduce. ('<' < '-').
    Conflito entre regra 55 e token '>' resolvido como reduce. ('>' < '-').
    Conflito entre regra 55 e token '+' resolvido como reduce. (%left '+').
    Conflito entre regra 55 e token '-' resolvido como reduce. (%left '-').
    Conflito entre regra 55 e token '*' resolvido como shift. ('-' < '*').
    Conflito entre regra 55 e token '/' resolvido como shift. ('-' < '/').


Estado 84

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   56    | exp '*' exp .
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    $padrão  reduzir usando a regra 56 (exp)

    Conflito entre regra 56 e token OPERATOR_LE resolvido como reduce. (OPERATOR_LE < '*').
    Conflito entre regra 56 e token OPERATOR_GE resolvido como reduce. (OPERATOR_GE < '*').
    Conflito entre regra 56 e token OPERATOR_EQ resolvido como reduce. (OPERATOR_EQ < '*').
    Conflito entre regra 56 e token OPERATOR_NE resolvido como reduce. (OPERATOR_NE < '*').
    Conflito entre regra 56 e token OPERATOR_AND resolvido como reduce. (OPERATOR_AND < '*').
    Conflito entre regra 56 e token OPERATOR_OR resolvido como reduce. (OPERATOR_OR < '*').
    Conflito entre regra 56 e token '!' resolvido como reduce. ('!' < '*').
    Conflito entre regra 56 e token '<' resolvido como reduce. ('<' < '*').
    Conflito entre regra 56 e token '>' resolvido como reduce. ('>' < '*').
    Conflito entre regra 56 e token '+' resolvido como reduce. ('+' < '*').
    Conflito entre regra 56 e token '-' resolvido como reduce. ('-' < '*').
    Conflito entre regra 56 e token '*' resolvido como reduce. (%left '*').
    Conflito entre regra 56 e token '/' resolvido como reduce. (%left '/').


Estado 85

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   57    | exp '/' exp .
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    $padrão  reduzir usando a regra 57 (exp)

    Conflito entre regra 57 e token OPERATOR_LE resolvido como reduce. (OPERATOR_LE < '/').
    Conflito entre regra 57 e token OPERATOR_GE resolvido como reduce. (OPERATOR_GE < '/').
    Conflito entre regra 57 e token OPERATOR_EQ resolvido como reduce. (OPERATOR_EQ < '/').
    Conflito entre regra 57 e token OPERATOR_NE resolvido como reduce. (OPERATOR_NE < '/').
    Conflito entre regra 57 e token OPERATOR_AND resolvido como reduce. (OPERATOR_AND < '/').
    Conflito entre regra 57 e token OPERATOR_OR resolvido como reduce. (OPERATOR_OR < '/').
    Conflito entre regra 57 e token '!' resolvido como reduce. ('!' < '/').
    Conflito entre regra 57 e token '<' resolvido como reduce. ('<' < '/').
    Conflito entre regra 57 e token '>' resolvido como reduce. ('>' < '/').
    Conflito entre regra 57 e token '+' resolvido como reduce. ('+' < '/').
    Conflito entre regra 57 e token '-' resolvido como reduce. ('-' < '/').
    Conflito entre regra 57 e token '*' resolvido como reduce. (%left '*').
    Conflito entre regra 57 e token '/' resolvido como reduce. (%left '/').


Estado 86

    9 vardec: vartype SYMBOL_IDENTIFIER '[' exp ']' ';' .

    $padrão  reduzir usando a regra 9 (vardec)


Estado 87

    8 vardec: vartype SYMBOL_IDENTIFIER '[' exp ']' ':' . lit_value_or_initvect ';'

    SYMBOL_LIT_INT   deslocar, e ir ao estado 18
    SYMBOL_LIT_REAL  deslocar, e ir ao estado 19
    SYMBOL_LIT_CHAR  deslocar, e ir ao estado 20

    $padrão  reduzir usando a regra 19 (lit_value_or_initvect)

    lit_value_or_initvect  ir ao estado 98


Estado 88

   26 block: '{' . lcmd '}'

    KW_IF              deslocar, e ir ao estado 99
    KW_WHILE           deslocar, e ir ao estado 100
    KW_FOR             deslocar, e ir ao estado 101
    KW_READ            deslocar, e ir ao estado 102
    KW_RETURN          deslocar, e ir ao estado 103
    KW_PRINT           deslocar, e ir ao estado 104
    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 105
    '#'                deslocar, e ir ao estado 106
    '{'                deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 40 (cmd)

    block  ir ao estado 107
    lcmd   ir ao estado 108
    cmd    ir ao estado 109


Estado 89

   20 fundec: vartype SYMBOL_IDENTIFIER '(' funparaml ')' block .

    $padrão  reduzir usando a regra 20 (fundec)


Estado 90

   24 paramrest: ',' paramdecl . paramrest

    ','  deslocar, e ir ao estado 58

    $padrão  reduzir usando a regra 25 (paramrest)

    paramrest  ir ao estado 110


Estado 91

    7 vardec: vartype '#' SYMBOL_IDENTIFIER '=' lit_value_pointer ';' .

    $padrão  reduzir usando a regra 7 (vardec)


Estado 92

   70 exp: SYMBOL_IDENTIFIER '[' exp ']' .

    $padrão  reduzir usando a regra 70 (exp)


Estado 93

   80 listParam: '#' SYMBOL_IDENTIFIER .

    $padrão  reduzir usando a regra 80 (listParam)


Estado 94

   81 listParam: '&' SYMBOL_IDENTIFIER .

    $padrão  reduzir usando a regra 81 (listParam)


Estado 95

   71 exp: SYMBOL_IDENTIFIER '(' paraml ')' .

    $padrão  reduzir usando a regra 71 (exp)


Estado 96

   74 newparam: ',' . listParam newparam

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 64
    SYMBOL_LIT_INT     deslocar, e ir ao estado 65
    SYMBOL_LIT_REAL    deslocar, e ir ao estado 66
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 67
    '#'                deslocar, e ir ao estado 68
    '&'                deslocar, e ir ao estado 69

    listParam  ir ao estado 111


Estado 97

   72 paraml: listParam newparam .

    $padrão  reduzir usando a regra 72 (paraml)


Estado 98

    8 vardec: vartype SYMBOL_IDENTIFIER '[' exp ']' ':' lit_value_or_initvect . ';'

    ';'  deslocar, e ir ao estado 112


Estado 99

   36 cmd: KW_IF . '(' exp ')' KW_THEN cmd
   37    | KW_IF . '(' exp ')' KW_THEN cmd KW_ELSE cmd

    '('  deslocar, e ir ao estado 113


Estado 100

   35 cmd: KW_WHILE . '(' exp ')' cmd

    '('  deslocar, e ir ao estado 114


Estado 101

   38 cmd: KW_FOR . '(' SYMBOL_IDENTIFIER '=' exp KW_TO exp ')' cmd

    '('  deslocar, e ir ao estado 115


Estado 102

   32 cmd: KW_READ . return_read

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 116
    SYMBOL_LIT_INT     deslocar, e ir ao estado 117
    SYMBOL_LIT_REAL    deslocar, e ir ao estado 118
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 119
    SYMBOL_LIT_STRING  deslocar, e ir ao estado 120

    return_read  ir ao estado 121


Estado 103

   33 cmd: KW_RETURN . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 122


Estado 104

   34 cmd: KW_PRINT . argprint

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    SYMBOL_LIT_STRING  deslocar, e ir ao estado 123
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    argprint      ir ao estado 124
    printelement  ir ao estado 125
    exp           ir ao estado 126


Estado 105

   29 cmd: SYMBOL_IDENTIFIER . '=' exp
   30    | SYMBOL_IDENTIFIER . '[' exp ']' '=' exp

    '='  deslocar, e ir ao estado 127
    '['  deslocar, e ir ao estado 128


Estado 106

   31 cmd: '#' . SYMBOL_IDENTIFIER '=' exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 129


Estado 107

   39 cmd: block . cmd

    KW_IF              deslocar, e ir ao estado 99
    KW_WHILE           deslocar, e ir ao estado 100
    KW_FOR             deslocar, e ir ao estado 101
    KW_READ            deslocar, e ir ao estado 102
    KW_RETURN          deslocar, e ir ao estado 103
    KW_PRINT           deslocar, e ir ao estado 104
    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 105
    '#'                deslocar, e ir ao estado 106
    '{'                deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 40 (cmd)

    block  ir ao estado 107
    cmd    ir ao estado 130


Estado 108

   26 block: '{' lcmd . '}'

    '}'  deslocar, e ir ao estado 131


Estado 109

   27 lcmd: cmd . ';' lcmd
   28     | cmd .

    ';'  deslocar, e ir ao estado 132

    $padrão  reduzir usando a regra 28 (lcmd)


Estado 110

   24 paramrest: ',' paramdecl paramrest .

    $padrão  reduzir usando a regra 24 (paramrest)


Estado 111

   74 newparam: ',' listParam . newparam

    ','  deslocar, e ir ao estado 96

    $padrão  reduzir usando a regra 75 (newparam)

    newparam  ir ao estado 133


Estado 112

    8 vardec: vartype SYMBOL_IDENTIFIER '[' exp ']' ':' lit_value_or_initvect ';' .

    $padrão  reduzir usando a regra 8 (vardec)


Estado 113

   36 cmd: KW_IF '(' . exp ')' KW_THEN cmd
   37    | KW_IF '(' . exp ')' KW_THEN cmd KW_ELSE cmd

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 134


Estado 114

   35 cmd: KW_WHILE '(' . exp ')' cmd

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 135


Estado 115

   38 cmd: KW_FOR '(' . SYMBOL_IDENTIFIER '=' exp KW_TO exp ')' cmd

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 136


Estado 116

   44 return_read: SYMBOL_IDENTIFIER .

    $padrão  reduzir usando a regra 44 (return_read)


Estado 117

   41 return_read: SYMBOL_LIT_INT .

    $padrão  reduzir usando a regra 41 (return_read)


Estado 118

   42 return_read: SYMBOL_LIT_REAL .

    $padrão  reduzir usando a regra 42 (return_read)


Estado 119

   43 return_read: SYMBOL_LIT_CHAR .

    $padrão  reduzir usando a regra 43 (return_read)


Estado 120

   45 return_read: SYMBOL_LIT_STRING .

    $padrão  reduzir usando a regra 45 (return_read)


Estado 121

   32 cmd: KW_READ return_read .

    $padrão  reduzir usando a regra 32 (cmd)


Estado 122

   33 cmd: KW_RETURN exp .
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   deslocar, e ir ao estado 42
    OPERATOR_GE   deslocar, e ir ao estado 43
    OPERATOR_EQ   deslocar, e ir ao estado 44
    OPERATOR_NE   deslocar, e ir ao estado 45
    OPERATOR_AND  deslocar, e ir ao estado 46
    OPERATOR_OR   deslocar, e ir ao estado 47
    '!'           deslocar, e ir ao estado 48
    '<'           deslocar, e ir ao estado 49
    '>'           deslocar, e ir ao estado 50
    '+'           deslocar, e ir ao estado 51
    '-'           deslocar, e ir ao estado 52
    '*'           deslocar, e ir ao estado 53
    '/'           deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 33 (cmd)


Estado 123

   50 printelement: SYMBOL_LIT_STRING .

    $padrão  reduzir usando a regra 50 (printelement)


Estado 124

   34 cmd: KW_PRINT argprint .

    $padrão  reduzir usando a regra 34 (cmd)


Estado 125

   46 argprint: printelement . restprint

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    SYMBOL_LIT_STRING  deslocar, e ir ao estado 123
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    $padrão  reduzir usando a regra 48 (restprint)

    restprint     ir ao estado 137
    printelement  ir ao estado 138
    exp           ir ao estado 126


Estado 126

   49 printelement: exp .
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   deslocar, e ir ao estado 42
    OPERATOR_GE   deslocar, e ir ao estado 43
    OPERATOR_EQ   deslocar, e ir ao estado 44
    OPERATOR_NE   deslocar, e ir ao estado 45
    OPERATOR_AND  deslocar, e ir ao estado 46
    OPERATOR_OR   deslocar, e ir ao estado 47
    '!'           deslocar, e ir ao estado 48
    '<'           deslocar, e ir ao estado 49
    '>'           deslocar, e ir ao estado 50
    '+'           deslocar, e ir ao estado 51
    '-'           deslocar, e ir ao estado 52
    '*'           deslocar, e ir ao estado 53
    '/'           deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 49 (printelement)


Estado 127

   29 cmd: SYMBOL_IDENTIFIER '=' . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 139


Estado 128

   30 cmd: SYMBOL_IDENTIFIER '[' . exp ']' '=' exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 140


Estado 129

   31 cmd: '#' SYMBOL_IDENTIFIER . '=' exp

    '='  deslocar, e ir ao estado 141


Estado 130

   39 cmd: block cmd .

    $padrão  reduzir usando a regra 39 (cmd)


Estado 131

   26 block: '{' lcmd '}' .

    $padrão  reduzir usando a regra 26 (block)


Estado 132

   27 lcmd: cmd ';' . lcmd

    KW_IF              deslocar, e ir ao estado 99
    KW_WHILE           deslocar, e ir ao estado 100
    KW_FOR             deslocar, e ir ao estado 101
    KW_READ            deslocar, e ir ao estado 102
    KW_RETURN          deslocar, e ir ao estado 103
    KW_PRINT           deslocar, e ir ao estado 104
    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 105
    '#'                deslocar, e ir ao estado 106
    '{'                deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 40 (cmd)

    block  ir ao estado 107
    lcmd   ir ao estado 142
    cmd    ir ao estado 109


Estado 133

   74 newparam: ',' listParam newparam .

    $padrão  reduzir usando a regra 74 (newparam)


Estado 134

   36 cmd: KW_IF '(' exp . ')' KW_THEN cmd
   37    | KW_IF '(' exp . ')' KW_THEN cmd KW_ELSE cmd
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   deslocar, e ir ao estado 42
    OPERATOR_GE   deslocar, e ir ao estado 43
    OPERATOR_EQ   deslocar, e ir ao estado 44
    OPERATOR_NE   deslocar, e ir ao estado 45
    OPERATOR_AND  deslocar, e ir ao estado 46
    OPERATOR_OR   deslocar, e ir ao estado 47
    '!'           deslocar, e ir ao estado 48
    '<'           deslocar, e ir ao estado 49
    '>'           deslocar, e ir ao estado 50
    '+'           deslocar, e ir ao estado 51
    '-'           deslocar, e ir ao estado 52
    '*'           deslocar, e ir ao estado 53
    '/'           deslocar, e ir ao estado 54
    ')'           deslocar, e ir ao estado 143


Estado 135

   35 cmd: KW_WHILE '(' exp . ')' cmd
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   deslocar, e ir ao estado 42
    OPERATOR_GE   deslocar, e ir ao estado 43
    OPERATOR_EQ   deslocar, e ir ao estado 44
    OPERATOR_NE   deslocar, e ir ao estado 45
    OPERATOR_AND  deslocar, e ir ao estado 46
    OPERATOR_OR   deslocar, e ir ao estado 47
    '!'           deslocar, e ir ao estado 48
    '<'           deslocar, e ir ao estado 49
    '>'           deslocar, e ir ao estado 50
    '+'           deslocar, e ir ao estado 51
    '-'           deslocar, e ir ao estado 52
    '*'           deslocar, e ir ao estado 53
    '/'           deslocar, e ir ao estado 54
    ')'           deslocar, e ir ao estado 144


Estado 136

   38 cmd: KW_FOR '(' SYMBOL_IDENTIFIER . '=' exp KW_TO exp ')' cmd

    '='  deslocar, e ir ao estado 145


Estado 137

   46 argprint: printelement restprint .

    $padrão  reduzir usando a regra 46 (argprint)


Estado 138

   47 restprint: printelement . restprint

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    SYMBOL_LIT_STRING  deslocar, e ir ao estado 123
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    $padrão  reduzir usando a regra 48 (restprint)

    restprint     ir ao estado 146
    printelement  ir ao estado 138
    exp           ir ao estado 126


Estado 139

   29 cmd: SYMBOL_IDENTIFIER '=' exp .
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   deslocar, e ir ao estado 42
    OPERATOR_GE   deslocar, e ir ao estado 43
    OPERATOR_EQ   deslocar, e ir ao estado 44
    OPERATOR_NE   deslocar, e ir ao estado 45
    OPERATOR_AND  deslocar, e ir ao estado 46
    OPERATOR_OR   deslocar, e ir ao estado 47
    '!'           deslocar, e ir ao estado 48
    '<'           deslocar, e ir ao estado 49
    '>'           deslocar, e ir ao estado 50
    '+'           deslocar, e ir ao estado 51
    '-'           deslocar, e ir ao estado 52
    '*'           deslocar, e ir ao estado 53
    '/'           deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 29 (cmd)


Estado 140

   30 cmd: SYMBOL_IDENTIFIER '[' exp . ']' '=' exp
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   deslocar, e ir ao estado 42
    OPERATOR_GE   deslocar, e ir ao estado 43
    OPERATOR_EQ   deslocar, e ir ao estado 44
    OPERATOR_NE   deslocar, e ir ao estado 45
    OPERATOR_AND  deslocar, e ir ao estado 46
    OPERATOR_OR   deslocar, e ir ao estado 47
    '!'           deslocar, e ir ao estado 48
    '<'           deslocar, e ir ao estado 49
    '>'           deslocar, e ir ao estado 50
    '+'           deslocar, e ir ao estado 51
    '-'           deslocar, e ir ao estado 52
    '*'           deslocar, e ir ao estado 53
    '/'           deslocar, e ir ao estado 54
    ']'           deslocar, e ir ao estado 147


Estado 141

   31 cmd: '#' SYMBOL_IDENTIFIER '=' . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 148


Estado 142

   27 lcmd: cmd ';' lcmd .

    $padrão  reduzir usando a regra 27 (lcmd)


Estado 143

   36 cmd: KW_IF '(' exp ')' . KW_THEN cmd
   37    | KW_IF '(' exp ')' . KW_THEN cmd KW_ELSE cmd

    KW_THEN  deslocar, e ir ao estado 149


Estado 144

   35 cmd: KW_WHILE '(' exp ')' . cmd

    KW_IF              deslocar, e ir ao estado 99
    KW_WHILE           deslocar, e ir ao estado 100
    KW_FOR             deslocar, e ir ao estado 101
    KW_READ            deslocar, e ir ao estado 102
    KW_RETURN          deslocar, e ir ao estado 103
    KW_PRINT           deslocar, e ir ao estado 104
    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 105
    '#'                deslocar, e ir ao estado 106
    '{'                deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 40 (cmd)

    block  ir ao estado 107
    cmd    ir ao estado 150


Estado 145

   38 cmd: KW_FOR '(' SYMBOL_IDENTIFIER '=' . exp KW_TO exp ')' cmd

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 151


Estado 146

   47 restprint: printelement restprint .

    $padrão  reduzir usando a regra 47 (restprint)


Estado 147

   30 cmd: SYMBOL_IDENTIFIER '[' exp ']' . '=' exp

    '='  deslocar, e ir ao estado 152


Estado 148

   31 cmd: '#' SYMBOL_IDENTIFIER '=' exp .
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   deslocar, e ir ao estado 42
    OPERATOR_GE   deslocar, e ir ao estado 43
    OPERATOR_EQ   deslocar, e ir ao estado 44
    OPERATOR_NE   deslocar, e ir ao estado 45
    OPERATOR_AND  deslocar, e ir ao estado 46
    OPERATOR_OR   deslocar, e ir ao estado 47
    '!'           deslocar, e ir ao estado 48
    '<'           deslocar, e ir ao estado 49
    '>'           deslocar, e ir ao estado 50
    '+'           deslocar, e ir ao estado 51
    '-'           deslocar, e ir ao estado 52
    '*'           deslocar, e ir ao estado 53
    '/'           deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 31 (cmd)


Estado 149

   36 cmd: KW_IF '(' exp ')' KW_THEN . cmd
   37    | KW_IF '(' exp ')' KW_THEN . cmd KW_ELSE cmd

    KW_IF              deslocar, e ir ao estado 99
    KW_WHILE           deslocar, e ir ao estado 100
    KW_FOR             deslocar, e ir ao estado 101
    KW_READ            deslocar, e ir ao estado 102
    KW_RETURN          deslocar, e ir ao estado 103
    KW_PRINT           deslocar, e ir ao estado 104
    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 105
    '#'                deslocar, e ir ao estado 106
    '{'                deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 40 (cmd)

    block  ir ao estado 107
    cmd    ir ao estado 153


Estado 150

   35 cmd: KW_WHILE '(' exp ')' cmd .

    $padrão  reduzir usando a regra 35 (cmd)


Estado 151

   38 cmd: KW_FOR '(' SYMBOL_IDENTIFIER '=' exp . KW_TO exp ')' cmd
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    KW_TO         deslocar, e ir ao estado 154
    OPERATOR_LE   deslocar, e ir ao estado 42
    OPERATOR_GE   deslocar, e ir ao estado 43
    OPERATOR_EQ   deslocar, e ir ao estado 44
    OPERATOR_NE   deslocar, e ir ao estado 45
    OPERATOR_AND  deslocar, e ir ao estado 46
    OPERATOR_OR   deslocar, e ir ao estado 47
    '!'           deslocar, e ir ao estado 48
    '<'           deslocar, e ir ao estado 49
    '>'           deslocar, e ir ao estado 50
    '+'           deslocar, e ir ao estado 51
    '-'           deslocar, e ir ao estado 52
    '*'           deslocar, e ir ao estado 53
    '/'           deslocar, e ir ao estado 54


Estado 152

   30 cmd: SYMBOL_IDENTIFIER '[' exp ']' '=' . exp

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 155


Estado 153

   36 cmd: KW_IF '(' exp ')' KW_THEN cmd .
   37    | KW_IF '(' exp ')' KW_THEN cmd . KW_ELSE cmd

    KW_ELSE  deslocar, e ir ao estado 156

    KW_ELSE   [reduzir usando a regra 36 (cmd)]
    $padrão  reduzir usando a regra 36 (cmd)


Estado 154

   38 cmd: KW_FOR '(' SYMBOL_IDENTIFIER '=' exp KW_TO . exp ')' cmd

    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 22
    SYMBOL_LIT_INT     deslocar, e ir ao estado 23
    SYMBOL_LIT_CHAR    deslocar, e ir ao estado 24
    '#'                deslocar, e ir ao estado 25
    '('                deslocar, e ir ao estado 26
    '&'                deslocar, e ir ao estado 27

    exp  ir ao estado 157


Estado 155

   30 cmd: SYMBOL_IDENTIFIER '[' exp ']' '=' exp .
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   deslocar, e ir ao estado 42
    OPERATOR_GE   deslocar, e ir ao estado 43
    OPERATOR_EQ   deslocar, e ir ao estado 44
    OPERATOR_NE   deslocar, e ir ao estado 45
    OPERATOR_AND  deslocar, e ir ao estado 46
    OPERATOR_OR   deslocar, e ir ao estado 47
    '!'           deslocar, e ir ao estado 48
    '<'           deslocar, e ir ao estado 49
    '>'           deslocar, e ir ao estado 50
    '+'           deslocar, e ir ao estado 51
    '-'           deslocar, e ir ao estado 52
    '*'           deslocar, e ir ao estado 53
    '/'           deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 30 (cmd)


Estado 156

   37 cmd: KW_IF '(' exp ')' KW_THEN cmd KW_ELSE . cmd

    KW_IF              deslocar, e ir ao estado 99
    KW_WHILE           deslocar, e ir ao estado 100
    KW_FOR             deslocar, e ir ao estado 101
    KW_READ            deslocar, e ir ao estado 102
    KW_RETURN          deslocar, e ir ao estado 103
    KW_PRINT           deslocar, e ir ao estado 104
    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 105
    '#'                deslocar, e ir ao estado 106
    '{'                deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 40 (cmd)

    block  ir ao estado 107
    cmd    ir ao estado 158


Estado 157

   38 cmd: KW_FOR '(' SYMBOL_IDENTIFIER '=' exp KW_TO exp . ')' cmd
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '*' exp
   57    | exp . '/' exp
   58    | exp . '<' exp
   59    | exp . '>' exp
   60    | exp . '!' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   deslocar, e ir ao estado 42
    OPERATOR_GE   deslocar, e ir ao estado 43
    OPERATOR_EQ   deslocar, e ir ao estado 44
    OPERATOR_NE   deslocar, e ir ao estado 45
    OPERATOR_AND  deslocar, e ir ao estado 46
    OPERATOR_OR   deslocar, e ir ao estado 47
    '!'           deslocar, e ir ao estado 48
    '<'           deslocar, e ir ao estado 49
    '>'           deslocar, e ir ao estado 50
    '+'           deslocar, e ir ao estado 51
    '-'           deslocar, e ir ao estado 52
    '*'           deslocar, e ir ao estado 53
    '/'           deslocar, e ir ao estado 54
    ')'           deslocar, e ir ao estado 159


Estado 158

   37 cmd: KW_IF '(' exp ')' KW_THEN cmd KW_ELSE cmd .

    $padrão  reduzir usando a regra 37 (cmd)


Estado 159

   38 cmd: KW_FOR '(' SYMBOL_IDENTIFIER '=' exp KW_TO exp ')' . cmd

    KW_IF              deslocar, e ir ao estado 99
    KW_WHILE           deslocar, e ir ao estado 100
    KW_FOR             deslocar, e ir ao estado 101
    KW_READ            deslocar, e ir ao estado 102
    KW_RETURN          deslocar, e ir ao estado 103
    KW_PRINT           deslocar, e ir ao estado 104
    SYMBOL_IDENTIFIER  deslocar, e ir ao estado 105
    '#'                deslocar, e ir ao estado 106
    '{'                deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 40 (cmd)

    block  ir ao estado 107
    cmd    ir ao estado 160


Estado 160

   38 cmd: KW_FOR '(' SYMBOL_IDENTIFIER '=' exp KW_TO exp ')' cmd .

    $padrão  reduzir usando a regra 38 (cmd)
